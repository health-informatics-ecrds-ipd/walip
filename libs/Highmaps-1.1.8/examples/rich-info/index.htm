<!DOCTYPE HTML>
<html>
	<head >
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>Highmaps Example</title>

		<script type="text/javascript" src="../../../../js/jquery.js"></script>
		<style type="text/css">
* {
	font-family: sans-serif;
}
#wrapper {
	height: 500px;
	width: 1000px;
	margin: 0 auto;
	padding: 0;
}
#container {
	float: left;
	height: 500px; 
	width: 700px; 
	margin: 0;
}
#info {
	float: left;
	width: 270px;
	padding-left: 20px;
	margin: 100px 0 0 0;
	border-left: 1px solid silver;
}
#info h2 {
	display: inline;
	font-size: 13pt;
}
#info .f32 .flag {
	vertical-align: bottom !important;
}

#info h4 {
	margin: 1em 0 0 0;
}
		</style>
		<script type="text/javascript">
$(function () {

    $.post('post_get_data_for_map.php', function (csv) {
        var d = $.parseJSON(csv);
        var countries = {},
            mapChart,
            countryChart,
            categories = [],
            code = [],
            datas = {},
            names = [];
        
        var nbYears = 0;
        var minYear = $.parseJSON(d[0]).annee;
        
        $.each(d,function(key, value){
            var dd = $.parseJSON(value);
            
            if(dd.annee !== null && $.inArray(dd.annee,categories) == -1){
                categories.push((dd.annee));
            }
            if(dd.code_pays !== null && $.inArray(dd.code_pays,code) == -1){
                code.push(dd.code_pays);
            }
            if(dd.pays !== null && $.inArray(dd.pays,names) == -1){
                names.push(dd.pays);
            }
            if(datas[dd.code_pays] == undefined){
                   datas[dd.code_pays] = [];
            }
            if(datas[dd.code_pays].length <= (dd.annee-minYear)){            
                var zeros = (dd.annee-minYear) - datas[dd.code_pays].length;
                for(var i = 0; i < zeros ; i++){
                    datas[dd.code_pays].push(null); 
                }
            }
            if( nbYears < datas[dd.code_pays].length){
                nbYears = datas[dd.code_pays].length;
            }
            datas[dd.code_pays].push(parseInt(dd.nb));   
        });
        //console.log(nbYears);
        $.each(datas, function(key,v){
            if(datas[key].length < nbYears){
                for (var i = datas[key].length-1; i < nbYears; i++){
                    datas[key].push(null);
                }
            }
        });
        
        var j = 0;
        $.each(code, function(key, value){
            countries[value] = { 
                name : names[j],
                code3 : value,
                data : datas[value]
            };
            j = j + 1;
        });
       //console.log(countries);
        // For each country, use the latest value for current population
        var data = [];
        for (var code3 in countries) {
            
            var value = null,
                year,
                itemData = countries[code3].data,
                i = itemData.length;
            
            while (i--) {
                if (itemData[i] !== null && year !== null) {
                    value = parseInt(itemData[i]);
                    year = categories[i];
                    break;
                }
            }
           
            data.push({
                name: countries[code3].name,
                code3: code3,
                value: value,
                year: year
            });
        }
        //console.log(data);
        // Add lower case codes to the data set for inclusion in the tooltip.pointFormat
        var mapData = Highcharts.geojson(Highcharts.maps['custom/world']);
        $.each(mapData, function () {
            this.id = this.properties['hc-key']; // for Chart.get()
            this.flag = this.id.replace('UK', 'GB').toLowerCase();
        });

        // Wrap point.select to get to the total selected points
        Highcharts.wrap(Highcharts.Point.prototype, 'select', function (proceed) {

            proceed.apply(this, Array.prototype.slice.call(arguments, 1));

            var points = mapChart.getSelectedPoints();

            if (points.length) {
                if (points.length === 1) {
                    $('#info #flag').attr('class', 'flag ' + points[0].flag);
                    $('#info h2').html(points[0].name);
                } else {
                    $('#info #flag').attr('class', 'flag');
                    $('#info h2').html('Comparing countries');

                }
                $('#info .subheader').html('<h4>Historique des prelevements</h4><small><em>Shift + Click sur les pays pour comparer</em></small>')

                if (!countryChart) {
                    countryChart = $('#country-chart').highcharts({
                        chart: {
                            height: 350,
                            spacingLeft: 0
                        },
                        credits: {
                            enabled: false
                        },
                        title: {
                            text: null
                        },
                        subtitle: {
                            text: null
                        },
                        xAxis: {
                            tickPixelInterval: 50,
                            crosshair: true
                        },
                        yAxis: {
                            title: null,
                            opposite: true
                        },
                        tooltip: {
                            shared: true
                        },
                        plotOptions: {
                            series: {
                                animation: {
                                    duration: 500
                                },
                                marker: {
                                    enabled: false
                                },
                                threshold: 0,
                                pointStart: parseInt(categories[0]),
                            }
                        }
                    }).highcharts();
                }

                $.each(points, function (i) {
                    // Update
                    if (countryChart.series[i]) {
                        /*$.each(countries[this.code3].data, function (pointI, value) {
                            countryChart.series[i].points[pointI].update(value, false);
                        });*/
                        countryChart.series[i].update({
                            name: this.name,
                            data: countries[this.code3].data,
                            type: points.length > 1 ? 'line' : 'area'
                        }, false);
                    } else {
                        countryChart.addSeries({
                            name: this.name,
                            data: countries[this.code3].data,
                            type: points.length > 1 ? 'line' : 'area'
                        }, false);
                    }
                });
                while (countryChart.series.length > points.length) {
                    countryChart.series[countryChart.series.length - 1].remove(false);
                }
                countryChart.redraw();

            } else {
                $('#info #flag').attr('class', '');
                $('#info h2').html('');
                $('#info .subheader').html('');
                if (countryChart) {
                    countryChart = countryChart.destroy();
                }
            }

            

        });
       
       
        // Initiate the map chart
        mapChart = $('#container').highcharts('Map', {
            
            title : {
                text : 'Nombre de prelevement(s) recu(s)'
            },

            subtitle: {
                text: 'Source: Institut Pasteur de Dakar'
            },

            mapNavigation: {
                enabled: true,
                buttonOptions: {
                    verticalAlign: 'bottom'
                }
            },

            colorAxis: {
                type: 'logarithmic',
                endOnTick: false,
                startOnTick: false,
                min: 10
            },

            tooltip: {
                footerFormat: '<span style="font-size: 10px">(Clicker pour details)</span>'
            },

            series : [{
                data : data,
                mapData: mapData,
                joinBy: ['iso-a3', 'code3'],
                name: 'Prelevemts annee courante',
                allowPointSelect: true,
                cursor: 'pointer',
                states: {
                    select: {
                        color: '#a4edba',
                        borderColor: 'black',
                        dashStyle: 'shortdot'
                    }
                }
            }]
        }).highcharts();

        // Pre-select a country
        mapChart.get('sn').select();
    });
});
		</script>
	</head>
	<body style="zoom:75%">
<script src="../../js/highcharts.js"></script>
<script src="../../js/modules/map.js"></script>
<script src="http://code.highcharts.com/mapdata/custom/world.js"></script>

<!-- Flag sprites service provided by Martijn Lafeber, https://github.com/lafeber/world-flags-sprite/blob/master/LICENSE -->
<link rel="stylesheet" type="text/css" href="http://cloud.github.com/downloads/lafeber/world-flags-sprite/flags32.css" />


<div id="wrapper">
	<div id="container"></div>
	<div id="info">
		<span class="f32"><span id="flag"></span></span>
		<h2></h2>
		<div class="subheader">Click countries to view history</div>
		<div id="country-chart"></div>
	</div>
</div>

	</body>
</html>
